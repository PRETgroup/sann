sc8:

main: module: xor_ann

instances: 1
root: 0
0: xor_ann 0 "" "xor_ann.strl" %lc: 1 1 0% %lc_end: 21 1 0%
end:

functions: 1
0: run_XOR_ANN_l3 (): $3 %lc: 6 10 0%
end:

procedures: 2
0: run_XOR_ANN_l1 () ($3,$3) %lc: 4 11 0%
1: run_XOR_ANN_l2 () () %lc: 5 11 0%
end:

signals: 3
0: input: x1 1 single: 0 2 - - -  bool: 1 0 previous: -  %lc: 9 7 0%
1: input: x2 4 single: 2 5 - - -  bool: 3 3 previous: 0 %lc: 9 18 0%
2: output: y 6 single: 4 7 - - - previous: 1 %lc: 10 8 0%
end:

variables: 5
0: $3 %sigval: 0% %lc: 9 7 0%
1: $0 %sigbool: 0% %lc: 9 7 0%
2: $3 %sigval: 1% %lc: 9 18 0%
3: $0 %sigbool: 1% %lc: 9 18 0%
4: $3 %sigval: 2% %lc: 10 8 0%
end:

actions: 11
0: call: $0 (1) (@$0)
1:  input: 0 %lc: 9 7 0%
2: reset: 0 %lc: 9 7 0%
3: call: $0 (3) (@$0)
4:  input: 1 %lc: 9 18 0%
5: reset: 2 %lc: 9 18 0%
6:  output: 2 %lc: 10 8 0%
7: reset: 4 %lc: 10 8 0%
8: call: 0 () (0,2) %lc: 13 10 0%
9: call: 1 () () %lc: 15 10 0%
10: call: $3 (4) (0 ()) %lc: 17 5 0%
end:

pauses: 4
0: %lc: 21 1 0%
1: %lc: 14 5 0%
2: %lc: 16 5 0%
3: %lc: 18 5 0%
end:
dependencies: 11
0: ACT_10_0_xxx_0_0_10_0 ActNet  : 10  0 0/0 %lc: 17 5 0%%sius: 2 0 17 5 0%
1: ACT_9_0_xxx_0_0_9_0 ActNet  : 9  0 0/0 %lc: 15 5 0%
2: ACT_5_0_xxx_0_0_5_0 ActNet  : 5  0 0/1 
3: ACT_2_0_xxx_0_0_2_0 ActNet  : 2  0 0/1 
4: ACT_8_0_xxx_0_0_8_0 ActNet 2 3  : 8  0 0/0 %lc: 13 5 0%
5: ACT_7_0_xxx_0_0_7_0 ActNet  : 7  0 0/1 
6: y__O_xxx_0 OutNet 0 5  : 6 : 2  0 0/0 
7: ROOT_K0_xxx_0  K1  : - : -  0 0/0 %lc: 21 1 0%
8: ROOT_K1_xxx_0  K0 0 1 4  : - : -  0 0/0 
9: x1__I_xxx_0 InNet  : 1 : 0 0 0/0 
10: x2__I_xxx_0 InNet  : 4 : 1 0 0/0 
end:

controls: 0
return: ROOT_K0_xxx_0 0
halting: ROOT_K1_xxx_0
end:

endmodule:
