module aibro:

% data handling declarations
procedure processFrontSensors()(integer, integer, integer);  % runs neural network A in C
procedure processSideSensors()(integer, integer, integer, integer);  % runs neural network B in C
procedure runDecision()();  % runs neural network C in C

function getAction(): integer;  % retrieves best action in C

% interface declarations
input start, A, B, R;
input front1: integer, front2: integer, front3: integer;
input side1: integer, side2: integer, side3: integer, side4: integer;
output O: integer;

% signals

[
% main thread
var out: integer in
	loop
		pause;
		[
			await A;
			% run ANN A: interpret frontal scanner data
			present front1 or front2 or front3 then
				call processFrontSensors()(?front1, ?front2, ?front3);
			end present
			||

			await B;
			%run ANN B: interpret side scanner data
			present side1 or side2 or side3 or side4 then
				call processSideSensors()(?side1, ?side2, ?side3, ?side4);
			end present
		];

		% run ANN C: decide on best course of action using interpretted input from A and B
		call runDecision()();

		emit O(getAction());
	each R
end var
]

end module